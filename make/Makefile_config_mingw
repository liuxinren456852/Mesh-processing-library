rel ?= 1#  0=debug or 1=release (usually 1).
x64 = 1#  32-bit is not supported by mingw64.

# CXX_STD = c++2a#  Compatible with -std=c++20

include $(dir $(lastword $(MAKEFILE_LIST)))/Makefile_base_gcc

# To locate: PATH="/Program Files/mingw-w64/x86_64-5.2.0-posix-seh-rt_v4-rev0/mingw64/bin:$PATH" which g++

ifneq ($(call file_exists,c:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin),)
  $(call prepend_PATH,c:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin)
else ifneq ($(call file_exists,c:/Program Files/mingw-w64/x86_64-7.1.0-posix-seh-rt_v5-rev0/mingw64/bin),)
  $(call prepend_PATH,c:/Program Files/mingw-w64/x86_64-7.1.0-posix-seh-rt_v5-rev0/mingw64/bin)
else ifneq ($(call file_exists,c:/Program Files/mingw-w64/x86_64-5.2.0-posix-seh-rt_v4-rev0/mingw64/bin),)
  $(call prepend_PATH,c:/Program Files/mingw-w64/x86_64-5.2.0-posix-seh-rt_v4-rev0/mingw64/bin)
else
  $(error Did not find mingw-w64 directory.)
endif

graphics_libs = -lopengl32 -lwinmm -lgdi32 -lcomdlg32 -luser32


## Stack trace on error:
# (set path=('/Program Files/mingw-w64/x86_64-5.2.0-posix-seh-rt_v4-rev0/mingw64/bin' $path:q); gdb --batch -ex run -ex where --args ~/git/hh_src/bin/mingw/HTest -dividebyzero)

# (set path=('/Program Files/mingw-w64/x86_64-5.2.0-posix-seh-rt_v4-rev0/mingw64/bin' $path:q); gdb --batch -ex run -ex where --args ~/git/hh_src/bin/mingw/HTest -accessviolation)
# ...
# Program received signal SIGSEGV, Segmentation fault.
# 0x0000000000540429 in int& hh::details::SHOW_aux<int&>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int&, bool) ()
# #0  0x0000000000540429 in int& hh::details::SHOW_aux<int&>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int&, bool) ()
# #1  0x0000000000404bf7 in (anonymous namespace)::do_accessviolation() ()
# #2  0x000000000043b7ed in hh::ParseArgs::parse_internal() ()
# #3  0x000000000043bab0 in hh::ParseArgs::parse() ()
# #4  0x0000000000558bac in main ()


## Debugging:
# http://stackoverflow.com/questions/5814568/is-there-a-way-to-generate-a-gdb-readable-coredump-when-running-programs-compile
# http://code.google.com/p/backtrace-mingw/source/browse/trunk/backtrace.c  for mingw32


## Misc:
# Check 64-bit and 32-bit output by using:
#  dumpbin -headers ../../libNumeric/clapack/blas_mingw.a | head -20
#  dumpbin -headers experiment3.o | head -20
#  dumpbin -headers experiment3.exe | head -20
