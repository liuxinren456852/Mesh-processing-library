CXX = g++
CC = gcc
AR = ar
RANLIB = ranlib

include $(dir $(lastword $(MAKEFILE_LIST)))/Makefile_base_either_gcc_or_clang

ifeq ($(plain_compiler),)
  cwarnings += -Wtrampolines -Wlogical-op -Wvector-operation-performance -Wno-double-promotion
  cxxwarnings += -Wzero-as-null-pointer-constant -Wold-style-cast -Wuseless-cast
  cxxwarnings += -fsized-deallocation -Wsized-deallocation
endif

# By itself, '-Wa,-a' defaults to '-ahls'. -h (high-level source requires "-g" debug compilation).
# See options in http://tigcc.ticalc.org/doc/gnuasm.html
# and http://stackoverflow.com/questions/1289881/using-gcc-to-produce-readable-assembly.
cxx_list_assembly_code ?= -Wa,-achlns=$(<:%.cpp=%.s) -fverbose-asm -masm=intel

# Enable creation of assembly file if desired (as alternative to cxx_list_assembly_code):
%.s : %.cpp
# -S omits object file, but does not allow interleaving source code.
#	$(filter-out -c,$(COMPILE.cpp)) -S -Wa,-achln -fverbose-asm -masm=intel -g $(@:$(extasm)=cpp)
# -g is required to interleave source code; hopefully does not modify generated code too much.
	$(filter-out ,$(COMPILE.cpp)) -g -Wa,-acdhln -fverbose-asm -masm=intel $(@:$(extasm)=cpp) -o v.$(@:$(extasm)=$(extobj)) >$(@:$(extasm)=$(extasm))
	rm -f v.$(@:$(extasm)=$(extobj))

%.h.gch : %.h
	@echo Making $(@) from $<
	@$(COMPILE.cpp) $<

ifeq ($(use_pch),1)
  # Force-include the precompiled header into every *.cpp file.
  cxxall += -include $(MeshRoot)/libHh/precompiled_libHh.h
endif

## Precompiled headers:
# https://gcc.gnu.org/onlinedocs/gcc/Precompiled-Headers.html
# This also works with -include.  So yet another way to use precompiled headers, good for projects not designed
# with precompiled header files in mind, is to simply take most of the header files used by a project, include
# them from another header file, precompile that header file, and -include the precompiled header.  If the
# header files have guards against multiple inclusion, they are skipped because they've already been included
# (in the precompiled header).

## Static linking:
# Use "-static" or "-Wl,-Bdynamic -lsomelibIwantshared -Wl,-Bstatic -lsomelibIwantstatic".
# http://stackoverflow.com/questions/13768515/how-to-do-static-linking-of-libwinpthread-1-dll-in-mingw
